# The default system is on slurm used at Princeton
#
# seisDD 
# download seisDD from github
git clone https://github.com/yanhuay/seisDD 
# set seisDD path
echo '# set seisDD path' >> ~/.bashrc
echo 'export seisDD=/path/of/seisDD' >> ~/.bashrc 
source ~/.bashrc
echo $seisDD
# make sure $seisDD is the same as '/path/to/seisDD' 

# with this specfem2d, I added an example of using tomo
# file to input attentuaton model
# compile with ifort and mpi
module load intel-mkl/11.0/1/64
module load intel/13.0/64/13.0.1.117
cd $seisDD/specfem2d
## with mpi (recommended) for parallel simulation
module load openmpi/intel-13.0/1.6.3/64
./configure FC=ifort --with-mpi
## without mpi for serial simulation (NPROC_SPECFEM=1) 
./configure FC=ifort
# compile
make clean
make all

cd $seisDD/seisDD/lib
make -f make_lib clean
make -f make_lib

# Experiments in paper:
#Double-difference adjoint seismic tomography
#YO Yuan, FJ Simons, J Tromp
#Geophysical Journal International (2016) accepted for publication
cd $seisDD/GJI2016

#Exp1 -- figure 1-3
cd Exp1
./run_this_example.sh
cd submit_job
./submit.sh
# to visualize 
python ../../../visualize/plot_bin  ./RESULTS/kernel/Scale0_CC_DD/misfit_kernel/ beta_kernel_smooth 4 

#Exp2 -- figure 4-10
cd Exp2
./run_this_example.sh
cd submit_job
./submit.sh
# Experiment IIA -- default
# Experiment IIB -- change ``time_function_type=1'' in DATA/SOURCE 
# Experiment IIC -- change ``tshift=-1.0'' in SU_process/process_obs.sh

#Exp3 -- figure 11-12
cd Exp3
./run_this_example.sh
cd submit_job
./submit.sh

#Exp4 -- figure 13
cd Exp4
./run_this_example.sh
cd submit_job
./submit.sh

#Exp5 -- figure 14 
cd Exp5
./run_this_example.sh
cd submit_job
./submit.sh

#
#
# Addtional comments
# How to prepare gll model
# 1. prepare tomo model on regular grids
  !
  ! ORIGIN_X ORIGIN_Z END_X END_Z
  ! SPACING_X SPACING_Z
  ! NX NZ
  ! VP_MIN VP_MAX VS_MIN VS_MAX RHO_MIN RHO_MAX QKappa_MIN QKappa_MAX Qmu_MIN Qmu_MAX  
  ! x(1) z(0) vp vs rho QKappa Qmu
  ! x(2) z(0) vp vs rho QKappa Qmu
  ! ...
  ! x(NX) z(0) vp vs rho QKappa Qmu
  ! x(1) z(1) vp vs rho QKappa Qmu
  ! x(2) z(1) vp vs rho QKappa Qmu
  ! ...
  ! x(NX) z(1) vp vs rho QKappa Qmu
  ! x(1) z(2) vp vs rho QKappa Qmu
  ! ...
  ! ...
  ! x(NX) z(NZ) vp vs rho QKappa Qmu
  !
# 2. specfem forward modeling, input tomo, output gll binary model
 vim DATA/Par_file
 MODEL = default
 SAVE_MODEL = binary
 nmodels=1
 1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0
 TOMOGRAPHY_FILE = /your/tomo/file
# output models are in DATA/
